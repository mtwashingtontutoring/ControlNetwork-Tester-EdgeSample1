{
  "$schema-template": "4.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "numericengineeringregistry1": {
                "username": "$CONTAINER_REGISTRY_USERNAME_numericengineeringregistry1",
                "password": "$CONTAINER_REGISTRY_PASSWORD_numericengineeringregistry1",
                "address": "$CONTAINER_REGISTRY_ADDRESS_numericengineeringregistry1"
              },
              "docker_mtwtn": {
                "username": "$CONTAINER_REGISTRY_USERNAME_docker_mtwtn",
                "password": "$CONTAINER_REGISTRY_PASSWORD_docker_mtwtn",
                "address": "$CONTAINER_REGISTRY_ADDRESS_docker_mtwtn"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.2",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.2",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "ControlNetworkServerExampleModule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.ControlNetworkServerExampleModule.amd64.debug}",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "18080/tcp": [
                      {
                        "HostPort": "18080"
                      }
                    ]
                  }
                }
              }
            }
          },
          "RollPitchYawSensorModule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.RollPitchYawSensorModule.amd64.debug}",
              "createOptions": {}
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.2",
        "routes": {
          "ControlNetworkServerExampleModuleToIoTHub": "FROM /messages/modules/ControlNetworkServerExampleModule/outputs/* INTO $upstream",
          "RollPitchYawSensorModuleToIoTHub":
            "FROM /messages/modules/SimulatedTemperatureSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/ControlNetworkServerExampleModule/inputs/input1\")"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "ControlNetworkServerExampleModule": {
      "properties.desired": {
        "ControlNetwork": {
          "config": {
            "Listeners": {
              "test-server": {
                "Name": "test-server",
                "HostName": "0.0.0.0",
                "Port": 18080
              },
              "test-server-IPV6": {
                "Name": "test-server",
                "HostName": "::",
                "Port": 18080
              }
            }
          }
        }
      }
    }
  }
}